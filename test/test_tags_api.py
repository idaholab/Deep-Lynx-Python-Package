# coding: utf-8

"""
    DeepLynx

    The construction of megaprojects has consistently demonstrated challenges for project managers in regard to meeting cost, schedule, and performance requirements. Megaproject construction challenges are common place within megaprojects with many active projects in the United States failing to meet cost and schedule efforts by significant margins. Currently, engineering teams operate in siloed tools and disparate teams where connections across design, procurement, and construction systems are translated manually or over brittle point-to-point integrations. The manual nature of data exchange increases the risk of silent errors in the reactor design, with each silent error cascading across the design. These cascading errors lead to uncontrollable risk during construction, resulting in significant delays and cost overruns. DeepLynx allows for an integrated platform during design and operations of mega projects. The DeepLynx Core API delivers a few main features. 1. Provides a set of methods and endpoints for manipulating data in an object oriented database. This allows us to store complex datatypes as records and then to compile them into actual, modifiable objects at run-time. Users can store taxonomies or ontologies in a readable format. 2. Provides methods for storing and retrieving data in a graph database. This data is structured and validated against the aformentioned object oriented database before storage.  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import unittest

import deep_lynx
from deep_lynx.api.tags_api import TagsApi  # noqa: E501
from deep_lynx.rest import ApiException


class TestTagsApi(unittest.TestCase):
    """TagsApi unit test stubs"""

    def setUp(self):
        self.api = TagsApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_delete_webgl_file(self):
        """Test case for delete_webgl_file

        Delete WebGL File  # noqa: E501
        """
        pass

    def test_detach_tag_from_edge(self):
        """Test case for detach_tag_from_edge

        Detach Tag From Edge  # noqa: E501
        """
        pass

    def test_detach_tag_from_file(self):
        """Test case for detach_tag_from_file

        Detach Tag From File  # noqa: E501
        """
        pass

    def test_detach_tag_from_node(self):
        """Test case for detach_tag_from_node

        Detach Tag From Node  # noqa: E501
        """
        pass

    def test_get_containers_container_id_graphs_tags_edges_edge_id(self):
        """Test case for get_containers_container_id_graphs_tags_edges_edge_id

        List Tags for Edge  # noqa: E501
        """
        pass

    def test_get_containers_container_id_graphs_tags_files_file_id(self):
        """Test case for get_containers_container_id_graphs_tags_files_file_id

        List Tags for File  # noqa: E501
        """
        pass

    def test_get_containers_container_id_graphs_tags_nodes_node_id(self):
        """Test case for get_containers_container_id_graphs_tags_nodes_node_id

        List Tags for Node  # noqa: E501
        """
        pass

    def test_get_containers_container_id_graphs_tags_nodes_tag_id(self):
        """Test case for get_containers_container_id_graphs_tags_nodes_tag_id

        List Nodes with Tag  # noqa: E501
        """
        pass

    def test_get_containers_container_id_graphs_tags_tag_id_edges(self):
        """Test case for get_containers_container_id_graphs_tags_tag_id_edges

        List Edges with Tag  # noqa: E501
        """
        pass

    def test_get_containers_container_id_graphs_tags_tag_id_files(self):
        """Test case for get_containers_container_id_graphs_tags_tag_id_files

        List Files with Tag  # noqa: E501
        """
        pass

    def test_list_tags(self):
        """Test case for list_tags

        List Tags  # noqa: E501
        """
        pass

    def test_list_webgl(self):
        """Test case for list_webgl

        List WebGL  # noqa: E501
        """
        pass

    def test_post_tags(self):
        """Test case for post_tags

        Create Tag  # noqa: E501
        """
        pass

    def test_put_containers_container_id_graphs_tags_nodes_node_id(self):
        """Test case for put_containers_container_id_graphs_tags_nodes_node_id

        Tag Node  # noqa: E501
        """
        pass

    def test_put_containers_container_id_graphs_tags_tag_id(self):
        """Test case for put_containers_container_id_graphs_tags_tag_id

        Update Tag  # noqa: E501
        """
        pass

    def test_put_containers_container_id_graphs_tags_tag_id_edges_edge_id(self):
        """Test case for put_containers_container_id_graphs_tags_tag_id_edges_edge_id

        Tag Edge  # noqa: E501
        """
        pass

    def test_put_containers_container_id_graphs_tags_tag_id_files_file_id(self):
        """Test case for put_containers_container_id_graphs_tags_tag_id_files_file_id

        Tag File  # noqa: E501
        """
        pass

    def test_update_webgl_files(self):
        """Test case for update_webgl_files

        Update WebGL Files  # noqa: E501
        """
        pass

    def test_upload_webgl(self):
        """Test case for upload_webgl

        Upload WebGL  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
